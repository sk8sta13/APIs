package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.64

import (
	"context"

	"github.com/sk8sta13/APIs/graph/model"
)

// Orders is the resolver for the Orders field.
func (r *queryResolver) Orders(ctx context.Context) ([]*model.Order, error) {
	orders, err := r.OrderDb.FindAll()
	if err != nil {
		return nil, err
	}
	var ordersModel []*model.Order
	for _, order := range orders {
		ordersModel = append(ordersModel, &model.Order{
			ID:            order.Id,
			PaymentMethod: order.Payment_method,
			Total:         float64(order.Total),
			DatePurchase:  order.Date_purchase.String(),
			Status:        order.Status,
			CreatedAt:     order.Created_at.String(),
			UpdatedAt:     order.Updated_at.String(),
		})
	}
	return ordersModel, nil
}

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }
